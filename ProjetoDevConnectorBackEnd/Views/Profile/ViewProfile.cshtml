@model UsuarioModel

@{
    ViewData["Title"] = "Welcome To The Developer Connector";
}
<section class="container">
    <a asp-action="GetProfiles" class="btn">Back To Profiles</a>

    <div class="profile-grid my-1">
        <!-- Top -->
        <div class="profile-top bg-primary p-2">
            <img class="round-img my-1"
                 src="@Model.ProfilePic"
                 alt="" />

            <h1 class="large">@Model.UserName</h1>
            <p class="lead">Developer at @Model.Company</p>
            <p>@Model.Location</p>
            <div class="icons my-1">
                @if (!String.IsNullOrEmpty(Model.YoutubeUrl))
                {
                    <a href="@Model.YoutubeUrl" target="_blank">
                        <i class="fas fa-globe fa-2x"></i>
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.TwitterUrl))
                {
                    <a href="@Model.TwitterUrl" target="_blank">
                        <i class="fab fa-twitter fa-2x"></i>
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.FacebookUrl))
                {
                    <a href="@Model.FacebookUrl" target="_blank">
                        <i class="fab fa-facebook fa-2x"></i>
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.LinkedinUrl))
                {
                    <a href="@Model.LinkedinUrl" target="_blank">
                        <i class="fab fa-linkedin fa-2x"></i>
                    </a>
                }
                @if (!String.IsNullOrEmpty(Model.InstagramUrl))
                {
                    <a href="@Model.InstagramUrl" target="_blank">
                        <i class="fab fa-instagram fa-2x"></i>
                    </a>
                }
            </div>
        </div>
        <!-- About -->
        <div class="profile-about bg-light p-2">
            <h2 class="text-primary">@Model.UserName Bio</h2>
            <p>
                @Model.Bio
            </p>
            <div class="line"></div>
            <h2 class="text-primary">Skill Set</h2>
            <div class="skills">
                @if(!String.IsNullOrEmpty(@Model.Skills))
                {
                    string[] skills = Model.Skills.Split(",");
                    for(int i = 0; i < skills.Length; i++)
                    {
                        <div class="p-1"><i class="fas fa-check"></i>@skills[i].ToUpper()</div>
                    }
                }
            </div>
        </div>
        <!-- Experience -->
        <div class="profile-exp bg-white p-2">
            <h2 class="text-primary">Experiences</h2>
            <div id="profile-experiences">

            </div>
        </div>
        <!-- Education -->
        <div class="profile-edu bg-white p-2">
            <h2 class="text-primary">Education</h2>
            <div id="profile-education">

            </div>
        </div>
        <!-- Github Repos -->
        <div class="profile-github">
            <h2 class="text-primary my-1">
                <i class="fab fa-github"></i> Github Repos
            </h2>
            <div class="repo bg-white my-1 p-1">
                <div>
                    <h4><a href="#">Repo One</a></h4>
                    <p>
                        Lorem ipsum dolor sit amet consectetur adipisicing elit.
                        Facilis, tenetur.
                    </p>
                </div>

                <div>
                    <ul>
                        <li class="badge badge-primary">Stars: 44</li>
                        <li class="badge badge-dark">Watchers: 20</li>
                        <li class="badge badge-light">Forks: 25</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        GetExperiencesProfile();
        GetEducationProfile();
    });

    function GetExperiencesProfile() {
        $.ajax({
            url: '@Url.Action("GetExperiences", "Profile")',
            type: "GET",
            dataType: "json",
            success: function (result) {
                let html = '';
                $.each(result, function (i, exp) {
                    let currentJob = exp.currentJob == true ? 'Current' : exp.toDate;
                    html += `<div>
                    <h3>${exp.company}</h3>
                    <p>${exp.fromDate} - ${currentJob}</p>
                    <p><strong>Position: </strong> ${exp.jobTitle}</p>
                    <p>
                        <strong>Description: </strong>${exp.jobDescription}
                    </p>
                    </div>`;
                });
                $("#profile-experiences").html(html);
            },
            error: function () {
                alert("Erro ao recuperar informações.");
            }
        });
    }

    function GetEducationProfile() {
        $.ajax({
            url: '@Url.Action("GetEducation", "Profile")',
            type: "GET",
            dataType: "json",
            success: function (result) {
                let html = '';
                $.each(result, function (i, edc) {
                    let currentSchool = edc.currentSchool == true ? 'Current' : edc.toDate;
                    html += `<div>
                        <h3>${edc.schoolBootcamp}</h3>
                        <p>${edc.fromDate} - ${currentSchool}</p>
                        <p><strong>Degree: </strong> ${edc.degreeCertificate}</p>
                        <p><strong>Field Of Study: </strong> ${edc.fieldStudy}</p>
                        <p>
                            <strong>Description: </strong>${edc.programDescription}
                        </p>
                    </div>`
                });
                $("#profile-education").html(html);
            },
            error: function () {
                alert("Erro ao recuperar informações.");
            }
        });
    }

</script>